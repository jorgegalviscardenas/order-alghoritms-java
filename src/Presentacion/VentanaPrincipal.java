package Presentacion;

import Logica.*;
import java.awt.Color;
import java.awt.Frame;
import java.io.RandomAccessFile;
import javax.swing.JLabel;

/**
 * Es la ventana sobre la cual se van a localizar las ventanas
 *
 * @author Jorge Galvis Cardenas
 */
public class VentanaPrincipal extends javax.swing.JDialog {

    /**
     * Es el ancho para cada grafica
     */
    private int ancho;
    /**
     * Es el alto para cada grafica
     */
    private int alto;
    /**
     * Separacion de ancho entre cada grafica
     */
    public static final int SEPARACION_ANCHO = 20;
    /**
     * Separacion de alto entre cada grafica
     */
    public static final int SEPARACION_ALTO = 20;
    /**
     * Es el que transfroma el archivo texto plano de entrada en seis archivos
     * binarios
     */
    private TransformadorDeArchivos tda;
    /**
     * Es el color para pintar las graficas
     */
    private Color color;
    /**
     * Es el ordenador por el metodo Shell Sort
     */
    private ShellSorter ss;
    /**
     * Es el ordenador por el metodo Quick Sort
     */
    private QuickSorter qs;
    /**
     * Es el ordenador por el metodo Heap Sort
     */
    private HeadSorter hs;
    /**
     * Es el ordenador por el metodo Merge Sort
     */
    private MergeSorter ms;
    /**
     * Es el ordenador por el metodo Radix Sort
     */
    private RadixSorter rs;
    /**
     * Es el ordenador por el metodo Counting Sort
     */
    private CountingSorter cs;

    /**
     * Constructor
     */
    public VentanaPrincipal(Frame f, boolean modal, Color color, String ruta) {
        super(f, modal);
        inicializarComponentes();
        this.color = color;
        ancho = (this.getWidth() - 10 - (2 * SEPARACION_ALTO)) / 3;
        alto = (this.getHeight() - 30 - (2 * SEPARACION_ANCHO)) / 2;
        tda = new TransformadorDeArchivos(ruta);
        tda.transformarArchivo();
        establecerGraficas();
    }

    /**
     * Metodo que coloca las graficas sobre esta ventana
     */
    private void establecerGraficas() {
        RandomAccessFile rafShell = tda.getRafShell();
        Grafica g1 = new Grafica(rafShell, 0, SEPARACION_ALTO, ancho, alto, color);
        ss = new ShellSorter(rafShell, g1);
        JLabel j1 = new JLabel("Shell Sort");
        j1.setBounds(ancho / 2, 5, ancho / 2, SEPARACION_ALTO);
        this.add(j1);
        this.add(g1);
        RandomAccessFile rafQuick = tda.getRafQuick();
        Grafica g2 = new Grafica(rafQuick, ancho + SEPARACION_ANCHO, SEPARACION_ALTO, ancho, alto, color);
        qs = new QuickSorter(rafQuick, g2);
        JLabel j2 = new JLabel("Quick Sort");
        j2.setBounds(ancho + SEPARACION_ANCHO + (ancho / 2), 0, ancho / 2, SEPARACION_ALTO);
        this.add(j2);
        this.add(g2);
        RandomAccessFile rafHead = tda.getRafHead();
        Grafica g3 = new Grafica(rafHead, 2 * (ancho + SEPARACION_ANCHO), SEPARACION_ALTO, ancho, alto, color);
        hs = new HeadSorter(rafHead, g3);
        JLabel j3 = new JLabel("Head Sort");
        j3.setBounds(2 * (ancho + SEPARACION_ANCHO) + (ancho / 2), 0, ancho / 2, SEPARACION_ALTO);
        this.add(j3);
        this.add(g3);
        RandomAccessFile rafMerge = tda.getRafMerge();
        Grafica g4 = new Grafica(rafMerge, 0, alto + 2 * SEPARACION_ALTO, ancho, alto, color);
        ms = new MergeSorter(rafMerge, g4);
        JLabel j4 = new JLabel("Merge Sort");
        j4.setBounds(ancho / 2, alto + SEPARACION_ALTO, ancho / 2, SEPARACION_ALTO);
        this.add(j4);
        this.add(g4);
        RandomAccessFile rafRadix = tda.getRafRadix();
        Grafica g5 = new Grafica(rafRadix, ancho + SEPARACION_ANCHO, alto + 2 * SEPARACION_ALTO, ancho, alto, color);
        rs = new RadixSorter(rafRadix, g5);
        JLabel j5 = new JLabel("Radix Sort");
        j5.setBounds((ancho + SEPARACION_ANCHO) + (ancho / 2), alto + SEPARACION_ALTO, ancho / 2, SEPARACION_ALTO);
        this.add(j5);
        this.add(g5);
        RandomAccessFile rafCounting = tda.getRafCounting();
        Grafica g6 = new Grafica(rafCounting, 2 * (ancho + SEPARACION_ANCHO), alto + 2 * SEPARACION_ALTO, ancho, alto, color);
        cs = new CountingSorter(rafCounting, g6);
        JLabel j6 = new JLabel("Counting Sort");
        j6.setBounds(2 * (ancho + SEPARACION_ANCHO) + (ancho / 2), alto + SEPARACION_ALTO, ancho / 2, SEPARACION_ALTO);
        this.add(j6);
        this.add(g6);
        new Thread(ss).start();
        new Thread(qs).start();
        new Thread(hs).start();
        new Thread(ms).start();
        new Thread(rs).start();
        new Thread(cs).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void inicializarComponentes() {
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 640, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
